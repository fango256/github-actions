name: Nightly

on:
  schedule:
    # * is a special character in YAML so you have to quote this string (2am every day)
    - cron:  '0 2 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AWS_REGION : eu-west-2 # AWS London region

# Permission can be added at job level or workflow level
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout




jobs:
  database_copy:
    runs-on: ubuntu-latest
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::929105575477:role/GitHubAction-ElasticBeanstalk
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
      - name: Perform database copy
        run: |
          CLONED_DATABASE_INSTANCE=database-copied

          # Test to see the target database exists
          EXISTING_COPIED_INSTANCE=$(aws rds describe-db-instances \
            --query 'DBInstances[*].[DBInstanceIdentifier]' \
            --filters Name=db-instance-id,Values=$CLONED_DATABASE_INSTANCE \
            --output text \
            )

          # If the target database exists then delete it first
          if [ $EXISTING_COPIED_INSTANCE ]
          then
            aws rds delete-db-instance --db-instance-identifier $CLONED_DATABASE_INSTANCE --skip-final-snapshot --no-cli-pager
            aws rds wait db-instance-deleted --db-instance-identifier $CLONED_DATABASE_INSTANCE
          fi

          LATEST_SNAPSHOT=$(aws rds describe-db-snapshots \
            --db-instance-identifier database-1 \
            --query "sort_by(DBSnapshots, &SnapshotCreateTime)[-1].{id:DBSnapshotIdentifier}" --output text)
          echo LATEST SNAPSHOT FOR RESTORE IS: $LATEST_SNAPSHOT

          aws rds restore-db-instance-from-db-snapshot \
            --region eu-west-2 \
            --db-instance-identifier $CLONED_DATABASE_INSTANCE \
            --db-snapshot-identifier $LATEST_SNAPSHOT \
            --allocated-storage 20 \
            --no-cli-pager
          aws rds wait db-instance-available --db-instance-identifier database-copied
